{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/quangnguyen/Documents/study/learn-reactjs/src/features/TodoFeature/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoList from './components/TodoList/index';\n\nfunction TodoFeature() {\n  _s();\n\n  const generateListTask = [{\n    id: 1,\n    name: 'eat',\n    status: 'new'\n  }, {\n    id: 2,\n    name: 'cook',\n    status: 'completed'\n  }, {\n    id: 3,\n    name: 'code',\n    status: 'new'\n  }];\n  const [listTask, setListTask] = useState(generateListTask);\n  const [filteredTask, setFilteredTask] = useState('all');\n\n  const changeStatusTask = (task, idx) => {\n    // clone array\n    const newTodoList = [...listTask]; // toggle state\n\n    const taskChange = { ...newTodoList[idx],\n      status: newTodoList[idx].status === 'new' ? 'completed' : 'new'\n    };\n    newTodoList[idx] = taskChange; // update state\n\n    setListTask(newTodoList);\n  };\n\n  const handlerAll = _ => {\n    setFilteredTask('all');\n  };\n\n  const handlerNew = _ => {\n    setFilteredTask('new');\n  };\n\n  const handlerCompleted = _ => {\n    setFilteredTask('completed');\n  };\n\n  const renderedList = listTask.filter(list => filteredTask === 'all' || filteredTask === list.status);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      listTask: renderedList,\n      changeStatusTask: changeStatusTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerAll,\n      children: \"Show All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerNew,\n      children: \"Show New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlerCompleted,\n      children: \"Show Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoFeature, \"qpwQtHyxvrt64xJ80ftuLSrnnDk=\");\n\n_c = TodoFeature;\n;\nexport default TodoFeature;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoFeature\");","map":{"version":3,"sources":["/Users/quangnguyen/Documents/study/learn-reactjs/src/features/TodoFeature/index.jsx"],"names":["React","useState","TodoList","TodoFeature","generateListTask","id","name","status","listTask","setListTask","filteredTask","setFilteredTask","changeStatusTask","task","idx","newTodoList","taskChange","handlerAll","_","handlerNew","handlerCompleted","renderedList","filter","list"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACrB,QAAMC,gBAAgB,GAAG,CACvB;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,MAAM,EAAE;AAHV,GADuB,EAOvB;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,MAAM,EAAE;AAHV,GAPuB,EAavB;AAEEF,IAAAA,EAAE,EAAE,CAFN;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAbuB,CAAzB;AAsBA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACG,gBAAD,CAAxC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMW,gBAAgB,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAe;AACtC;AACA,UAAMC,WAAW,GAAG,CAAC,GAAGP,QAAJ,CAApB,CAFsC,CAItC;;AACA,UAAMQ,UAAU,GAAG,EACjB,GAAGD,WAAW,CAACD,GAAD,CADG;AAEjBP,MAAAA,MAAM,EAAEQ,WAAW,CAACD,GAAD,CAAX,CAAiBP,MAAjB,KAA4B,KAA5B,GAAoC,WAApC,GAAkD;AAFzC,KAAnB;AAKAQ,IAAAA,WAAW,CAACD,GAAD,CAAX,GAAmBE,UAAnB,CAVsC,CAYtC;;AACAP,IAAAA,WAAW,CAACM,WAAD,CAAX;AACD,GAdD;;AAgBA,QAAME,UAAU,GAAGC,CAAC,IAAI;AACtBP,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMQ,UAAU,GAAGD,CAAC,IAAI;AACtBP,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMS,gBAAgB,GAAGF,CAAC,IAAI;AAC5BP,IAAAA,eAAe,CAAC,WAAD,CAAf;AACD,GAFD;;AAIA,QAAMU,YAAY,GAAGb,QAAQ,CAACc,MAAT,CAAgBC,IAAI,IAAIb,YAAY,KAAK,KAAjB,IAA0BA,YAAY,KAAKa,IAAI,CAAChB,MAAxE,CAArB;AAEA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEc,YAApB;AAAkC,MAAA,gBAAgB,EAAET;AAApD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAEC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhEQjB,W;;KAAAA,W;AAgER;AAED,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport TodoList from './components/TodoList/index';\n\nfunction TodoFeature() {\n  const generateListTask = [\n    {\n      id: 1,\n      name: 'eat',\n      status: 'new',\n      \n    },\n    {\n      id: 2,\n      name: 'cook',\n      status: 'completed',\n      \n    },\n    {\n\n      id: 3,\n      name: 'code',\n      status: 'new',\n      \n    }\n  ]\n  \n  const [listTask, setListTask] = useState(generateListTask);\n  const [filteredTask, setFilteredTask] = useState('all');\n\n  const changeStatusTask = (task, idx) => {\n    // clone array\n    const newTodoList = [...listTask];\n\n    // toggle state\n    const taskChange = {\n      ...newTodoList[idx],\n      status: newTodoList[idx].status === 'new' ? 'completed' : 'new',\n    }\n\n    newTodoList[idx] = taskChange;\n\n    // update state\n    setListTask(newTodoList);\n  }\n\n  const handlerAll = _ => {\n    setFilteredTask('all');\n  }\n\n  const handlerNew = _ => {\n    setFilteredTask('new');\n  }\n\n  const handlerCompleted = _ => {\n    setFilteredTask('completed');\n  }\n\n  const renderedList = listTask.filter(list => filteredTask === 'all' || filteredTask === list.status);\n\n  return (\n    <div>\n      <TodoList listTask={renderedList} changeStatusTask={changeStatusTask}></TodoList>\n      <button onClick={handlerAll}>Show All</button>\n      <button onClick={handlerNew}>Show New</button>\n      <button onClick={handlerCompleted}>Show Completed</button>\n    </div>\n  )\n};\n\nexport default TodoFeature;"]},"metadata":{},"sourceType":"module"}